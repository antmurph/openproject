<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="active_storage"><RakeTask description="Copy over the migration needed to the application" fullCmd="active_storage:install" taksId="install" /><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="active_storage:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="app"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="app:template" taksId="template" /><RakeTask description="Update configs and some other initially generated files (or use just update:configs or update:bin)" fullCmd="app:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="app:templates:copy" taksId="copy" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="app:update:bin" taksId="bin" /><RakeTask description="" fullCmd="app:update:configs" taksId="configs" /><RakeTask description="" fullCmd="app:update:upgrade_guide_info" taksId="upgrade_guide_info" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="assets"><RakeTask description="Compile assets with webpack" fullCmd="assets:angular" taksId="angular" /><RakeTask description="Remove old compiled assets" fullCmd="assets:clean[keep]" taksId="clean[keep]" /><RakeTask description="Remove compiled assets" fullCmd="assets:clobber" taksId="clobber" /><RakeTask description="Load asset compile environment" fullCmd="assets:environment" taksId="environment" /><RakeTask description="Export frontend locale files" fullCmd="assets:export_locales" taksId="export_locales" /><RakeTask description="Compile all the assets named in config.assets.precompile" fullCmd="assets:precompile" taksId="precompile" /><RakeTask description="Prepare locales and angular assets" fullCmd="assets:prepare_op" taksId="prepare_op" /><RakeTask description="" fullCmd="assets:clean" taksId="clean" /><RakeTask description="" fullCmd="assets:compile_environment" taksId="compile_environment" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="attachments"><RakeTask description="Clear all attachments created before yesterday" fullCmd="attachments:clear" taksId="clear" /><RakeTask description="Copies all attachments from the current to the given storage" fullCmd="attachments:copy_to[to]" taksId="copy_to[to]" /><RakeTask description="Extract text content from attachment that were not extracted yet synchronously" fullCmd="attachments:extract_fulltext_where_missing" taksId="extract_fulltext_where_missing" /><RakeTask description="Extracts fulltext of all attachments and provide it for attachment filter even if that attachment has been \" fullCmd="attachments:force_extract_fulltext" taksId="force_extract_fulltext" /><RakeTask description="Extract text content from attachment that were not extracted yet" fullCmd="attachments:schedule_fulltext_extraction_where_missing" taksId="schedule_fulltext_extraction_where_missing" /><RakeTask description="" fullCmd="attachments:copy_to" taksId="copy_to" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="autoprefixer"><RakeTask description="Show selected browsers and prefixed CSS properties and values" fullCmd="autoprefixer:info" taksId="info" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="backup"><RakeGroup description="" fullCmd="" taksId="database"><RakeTask description="Creates a database dump which can be used as a backup" fullCmd="backup:database:create[path_to_backup]" taksId="create[path_to_backup]" /><RakeTask description="Restores a database dump created by the :create task" fullCmd="backup:database:restore[path_to_backup]" taksId="restore[path_to_backup]" /><RakeTask description="" fullCmd="backup:database:create" taksId="create" /><RakeTask description="" fullCmd="backup:database:restore" taksId="restore" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="cache_digests"><RakeTask description="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:dependencies" taksId="dependencies" /><RakeTask description="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:nested_dependencies" taksId="nested_dependencies" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="code"><RakeTask description="Fix line endings of all source files" fullCmd="code:fix_line_endings" taksId="fix_line_endings" /><RakeTask description="Set the magic encoding comment everywhere to UTF-8" fullCmd="code:source_encoding" taksId="source_encoding" /></RakeGroup><RakeTask description="Generates a secret token file" fullCmd="config/secret_token.yml" taksId="config/secret_token.yml" /><RakeGroup description="" fullCmd="" taksId="copyright"><RakeGroup description="" fullCmd="" taksId="authors"><RakeTask description="Shows contributors of a repository" fullCmd="copyright:authors:show[arg1]" taksId="show[arg1]" /><RakeTask description="" fullCmd="copyright:authors:show" taksId="show" /></RakeGroup><RakeTask description="Update the copyright on all source files" fullCmd="copyright:update[arg1]" taksId="update[arg1]" /><RakeTask description="Update the copyright on .atom.builder source files" fullCmd="copyright:update_atom_builder[arg1]" taksId="update_atom_builder[arg1]" /><RakeTask description="Update the copyright on .css source files" fullCmd="copyright:update_css[arg1]" taksId="update_css[arg1]" /><RakeTask description="Update the copyright on .css.erb source files" fullCmd="copyright:update_css_erb[arg1]" taksId="update_css_erb[arg1]" /><RakeTask description="Update the copyright on .feature source files" fullCmd="copyright:update_feature[arg1]" taksId="update_feature[arg1]" /><RakeTask description="Update the copyright on .html.erb source files" fullCmd="copyright:update_html_erb[arg1]" taksId="update_html_erb[arg1]" /><RakeTask description="Update the copyright on .js source files" fullCmd="copyright:update_js[arg1]" taksId="update_js[arg1]" /><RakeTask description="Update the copyright on .js.erb source files" fullCmd="copyright:update_js_erb[arg1]" taksId="update_js_erb[arg1]" /><RakeTask description="Update the copyright on .json.erb source files" fullCmd="copyright:update_json_erb[arg1]" taksId="update_json_erb[arg1]" /><RakeTask description="Update the copyright on .rake source files" fullCmd="copyright:update_rake[arg1]" taksId="update_rake[arg1]" /><RakeTask description="Update the copyright on .rb source files" fullCmd="copyright:update_rb[arg1]" taksId="update_rb[arg1]" /><RakeTask description="Update the copyright on .rb.example source files" fullCmd="copyright:update_rb_example[arg1]" taksId="update_rb_example[arg1]" /><RakeTask description="Update the copyright on .rdoc source files" fullCmd="copyright:update_rdoc[arg1]" taksId="update_rdoc[arg1]" /><RakeTask description="Update the copyright on .rjs source files" fullCmd="copyright:update_rjs[arg1]" taksId="update_rjs[arg1]" /><RakeTask description="Update the copyright on .sass source files" fullCmd="copyright:update_sass[arg1]" taksId="update_sass[arg1]" /><RakeTask description="Update special files, which do not have an ending" fullCmd="copyright:update_special_files[arg1]" taksId="update_special_files[arg1]" /><RakeTask description="Update the copyright on .sql source files" fullCmd="copyright:update_sql[arg1]" taksId="update_sql[arg1]" /><RakeTask description="Update the copyright on .text.erb source files" fullCmd="copyright:update_text_erb[arg1]" taksId="update_text_erb[arg1]" /><RakeTask description="Update the copyright on .yml source files" fullCmd="copyright:update_yml[arg1]" taksId="update_yml[arg1]" /><RakeTask description="Update the copyright on .yml.example source files" fullCmd="copyright:update_yml_example[arg1]" taksId="update_yml_example[arg1]" /><RakeTask description="" fullCmd="copyright:update" taksId="update" /><RakeTask description="" fullCmd="copyright:update_atom_builder" taksId="update_atom_builder" /><RakeTask description="" fullCmd="copyright:update_css" taksId="update_css" /><RakeTask description="" fullCmd="copyright:update_css_erb" taksId="update_css_erb" /><RakeTask description="" fullCmd="copyright:update_feature" taksId="update_feature" /><RakeTask description="" fullCmd="copyright:update_html_erb" taksId="update_html_erb" /><RakeTask description="" fullCmd="copyright:update_js" taksId="update_js" /><RakeTask description="" fullCmd="copyright:update_js_erb" taksId="update_js_erb" /><RakeTask description="" fullCmd="copyright:update_json_erb" taksId="update_json_erb" /><RakeTask description="" fullCmd="copyright:update_rake" taksId="update_rake" /><RakeTask description="" fullCmd="copyright:update_rb" taksId="update_rb" /><RakeTask description="" fullCmd="copyright:update_rb_example" taksId="update_rb_example" /><RakeTask description="" fullCmd="copyright:update_rdoc" taksId="update_rdoc" /><RakeTask description="" fullCmd="copyright:update_rjs" taksId="update_rjs" /><RakeTask description="" fullCmd="copyright:update_sass" taksId="update_sass" /><RakeTask description="" fullCmd="copyright:update_special_files" taksId="update_special_files" /><RakeTask description="" fullCmd="copyright:update_sql" taksId="update_sql" /><RakeTask description="" fullCmd="copyright:update_text_erb" taksId="update_text_erb" /><RakeTask description="" fullCmd="copyright:update_yml" taksId="update_yml" /><RakeTask description="" fullCmd="copyright:update_yml_example" taksId="update_yml_example" /></RakeGroup><RakeTask description="Alias for cucumber:ok" fullCmd="cucumber" taksId="cucumber" /><RakeGroup description="" fullCmd="" taksId="cucumber"><RakeTask description="Run core and plugin features" fullCmd="cucumber:all[options]" taksId="all[options]" /><RakeTask description="Run features selected via features argument" fullCmd="cucumber:custom[features]" taksId="custom[features]" /><RakeTask description="Run features that should pass" fullCmd="cucumber:ok" taksId="ok" /><RakeTask description="Run plugin features" fullCmd="cucumber:plugins[options]" taksId="plugins[options]" /><RakeTask description="" fullCmd="cucumber:all" taksId="all" /><RakeTask description="" fullCmd="cucumber:custom" taksId="custom" /><RakeTask description="" fullCmd="cucumber:plugins" taksId="plugins" /><RakeTask description="" fullCmd="cucumber:statsetup" taksId="statsetup" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to creating the development and test databases" fullCmd="db:create" taksId="create" /><RakeTask description="Decrypts SCM and LDAP passwords in the database" fullCmd="db:decrypt" taksId="decrypt" /><RakeTask description="Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to dropping the development and test databases" fullCmd="db:drop" taksId="drop" /><RakeTask description="Encrypts SCM and LDAP passwords in the database" fullCmd="db:encrypt" taksId="encrypt" /><RakeGroup description="" fullCmd="" taksId="environment"><RakeTask description="Set the environment value for the database" fullCmd="db:environment:set" taksId="set" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Loads fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:plugin" taksId="plugin" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clears a db/schema_cache.yml file" fullCmd="db:schema:cache:clear" taksId="clear" /><RakeTask description="Creates a db/schema_cache.yml file" fullCmd="db:schema:cache:dump" taksId="dump" /></RakeGroup><RakeTask description="Creates a db/schema.rb file that is portable against any DB supported by Active Record" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Loads a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /><RakeTask description="" fullCmd="db:schema:load_if_ruby" taksId="load_if_ruby" /></RakeGroup><RakeTask description="Loads the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="Clear the sessions table" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="Creates a sessions migration for use with ActiveRecord::SessionStore" fullCmd="db:sessions:create" taksId="create" /><RakeTask description="Expire old sessions from the sessions table" fullCmd="db:sessions:expire[days_ago]" taksId="expire[days_ago]" /><RakeTask description="Trim old sessions from the table (default: &gt; 30 days)" fullCmd="db:sessions:trim" taksId="trim" /><RakeTask description="" fullCmd="db:sessions:expire" taksId="expire" /></RakeGroup><RakeTask description="Creates the database, loads the schema, and initializes with the seed data (use db:reset to also drop the database first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dumps the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask description="Recreates the databases from the structure.sql file" fullCmd="db:structure:load" taksId="load" /><RakeTask description="" fullCmd="db:structure:load_if_sql" taksId="load_if_sql" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:_dump" taksId="_dump" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:check_protected_environments" taksId="check_protected_environments" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:_unsafe" taksId="_unsafe" /><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:migrate_plugins" taksId="migrate_plugins" /><RakeTask description="" fullCmd="db:purge" taksId="purge" /><RakeGroup description="" fullCmd="" taksId="purge"><RakeTask description="" fullCmd="db:purge:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="db:test:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="dev"><RakeTask description="Toggle development mode caching on/off" fullCmd="dev:cache" taksId="cache" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="doorkeeper"><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Removes stale data from doorkeeper related database tables" fullCmd="doorkeeper:db:cleanup" taksId="cleanup" /><RakeGroup description="" fullCmd="" taksId="cleanup"><RakeTask description="Removes expired (TTL passed) access grants" fullCmd="doorkeeper:db:cleanup:expired_grants" taksId="expired_grants" /><RakeTask description="Removes expired (TTL passed) access tokens" fullCmd="doorkeeper:db:cleanup:expired_tokens" taksId="expired_tokens" /><RakeTask description="Removes stale access grants" fullCmd="doorkeeper:db:cleanup:revoked_grants" taksId="revoked_grants" /><RakeTask description="Removes stale access tokens" fullCmd="doorkeeper:db:cleanup:revoked_tokens" taksId="revoked_tokens" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="doorkeeper:setup" taksId="setup" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="environment"><RakeTask description="Force application to eager load if configured (does not happen by default for rake tasks)" fullCmd="environment:full" taksId="full" /></RakeGroup><RakeTask description="Create YAML test fixtures from data in an existing database" fullCmd="extract_fixtures" taksId="extract_fixtures" /><RakeTask description="Generates a secret token file" fullCmd="generate_secret_token" taksId="generate_secret_token" /><RakeGroup description="" fullCmd="" taksId="git"><RakeTask description="Clean up your locale and remote repository" fullCmd="git:clean" taksId="clean" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="i18n"><RakeGroup description="" fullCmd="" taksId="js"><RakeTask description="Export translations to JS file(s)" fullCmd="i18n:js:export" taksId="export" /></RakeGroup></RakeGroup><RakeTask description="Print out all defined initializers in the order they are invoked by Rails" fullCmd="initializers" taksId="initializers" /><RakeGroup description="" fullCmd="" taksId="jobs"><RakeTask description="Exit with error status if any jobs older than max_age seconds haven't been attempted yet" fullCmd="jobs:check[max_age]" taksId="check[max_age]" /><RakeTask description="Clear the delayed_job queue" fullCmd="jobs:clear" taksId="clear" /><RakeTask description="Start a delayed_job worker" fullCmd="jobs:work" taksId="work" /><RakeTask description="Start a delayed_job worker and exit when all available jobs are complete" fullCmd="jobs:workoff" taksId="workoff" /><RakeTask description="" fullCmd="jobs:check" taksId="check" /><RakeTask description="" fullCmd="jobs:environment_options" taksId="environment_options" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="ldap"><RakeTask description="Creates a dummy LDAP auth source for logging in any user using the password &quot;dummy&quot;" fullCmd="ldap:create_dummy" taksId="create_dummy" /><RakeTask description="Delete all Dummy auth sources" fullCmd="ldap:delete_dummies" taksId="delete_dummies" /><RakeTask description="Register a LDAP auth source for the given LDAP URL and attribute mapping: rake ldap:register[&quot;url=&lt;URL&gt; name=&lt;Name&gt; onthefly=&lt;true,false&gt;map_{login,firstname,lastname,mail,admin}=attribute&quot;]" fullCmd="ldap:register" taksId="register" /><RakeTask description="Synchronize users from the LDAP auth source with an optional filterrake ldap:sync[&quot;name=&lt;LdapAuthSource Name&gt;&quot;, filter=&lt;Optional RFC2254 filter string&gt;]" fullCmd="ldap:sync" taksId="sync" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="ldap_groups"><RakeGroup description="" fullCmd="" taksId="development"><RakeTask description="Create a development LDAP server from the fixtures LDIF" fullCmd="ldap_groups:development:ldap_server" taksId="ldap_server" /></RakeGroup><RakeTask description="Synchronize groups and their users from the LDAP auth source.Will only synchronize for those users already present in the application" fullCmd="ldap_groups:synchronize" taksId="synchronize" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all/specified *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeGroup description="" fullCmd="" taksId="migrations"><RakeGroup description="" fullCmd="" taksId="attachments"><RakeTask description="Removes all attachments from versions and projects" fullCmd="migrations:attachments:delete_from_projects_and_versions" taksId="delete_from_projects_and_versions" /><RakeTask description="Moves old attachment files to their correct new path under carrierwave" fullCmd="migrations:attachments:move_old_files" taksId="move_old_files" /><RakeTask description="Creates special wiki pages for each project and version moving the attachments there" fullCmd="migrations:attachments:move_to_wiki" taksId="move_to_wiki" /></RakeGroup><RakeTask description="Use FROM environment variable to define a timezone to migrate from" fullCmd="migrations:change_timestamps_to_utc" taksId="change_timestamps_to_utc" /><RakeGroup description="" fullCmd="" taksId="documents"><RakeTask description="Removes all documents" fullCmd="migrations:documents:delete" taksId="delete" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="strong_passwords"><RakeTask description="Prepares database schema changed by the plug-in 'Strong Passwords' for follow-up migrations" fullCmd="migrations:strong_passwords:reregister" taksId="reregister" /></RakeGroup></RakeGroup><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject"><RakeGroup description="" fullCmd="" taksId="cron"><RakeTask description="An hourly cron job hook for plugin functionality" fullCmd="openproject:cron:hourly" taksId="hourly" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Ensure database version compatibility" fullCmd="openproject:db:ensure_database_compatibility" taksId="ensure_database_compatibility" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Register plugins from the :opf_plugins bundle group to the frontend" fullCmd="openproject:plugins:register_frontend" taksId="register_frontend" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_backlogs"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_backlogs to application" fullCmd="openproject_backlogs:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_costs"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_costs to application" fullCmd="openproject_costs:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_documents"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_documents to application" fullCmd="openproject_documents:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_global_roles"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_global_roles to application" fullCmd="openproject_global_roles:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_ldap_groups"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_ldap_groups to application" fullCmd="openproject_ldap_groups:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_meeting"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_meeting to application" fullCmd="openproject_meeting:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_my_project_page"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_my_project_page to application" fullCmd="openproject_my_project_page:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_pdf_export"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_pdf_export to application" fullCmd="openproject_pdf_export:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_reporting"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_reporting to application" fullCmd="openproject_reporting:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_two_factor_authentication"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_two_factor_authentication to application" fullCmd="openproject_two_factor_authentication:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openproject_webhooks"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from openproject_webhooks to application" fullCmd="openproject_webhooks:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="parallel"><RakeTask description="Run all suites in parallel (one after another)" fullCmd="parallel:all" taksId="all" /><RakeTask description="Run feature specs in parallel" fullCmd="parallel:features" taksId="features" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Run all plugin tests in parallel" fullCmd="parallel:plugins:all" taksId="all" /><RakeTask description="Run plugin cucumber features in parallel" fullCmd="parallel:plugins:cucumber" taksId="cucumber" /><RakeTask description="Run plugin feature specs in parallel" fullCmd="parallel:plugins:features" taksId="features" /><RakeTask description="Run plugin specs in parallel" fullCmd="parallel:plugins:specs" taksId="specs" /><RakeTask description="Run plugin unit specs in parallel" fullCmd="parallel:plugins:units" taksId="units" /></RakeGroup><RakeTask description="Run legacy specs in parallel" fullCmd="parallel:spec_legacy" taksId="spec_legacy" /><RakeTask description="Run spec in parallel (custom task)" fullCmd="parallel:specs" taksId="specs" /><RakeTask description="Run unit specs in parallel" fullCmd="parallel:units" taksId="units" /><RakeTask description="" fullCmd="parallel:create" taksId="create" /><RakeTask description="" fullCmd="parallel:drop" taksId="drop" /><RakeTask description="" fullCmd="parallel:features-spinach" taksId="features-spinach" /><RakeTask description="" fullCmd="parallel:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="parallel:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="parallel:migrate" taksId="migrate" /><RakeTask description="" fullCmd="parallel:prepare" taksId="prepare" /><RakeTask description="" fullCmd="parallel:rake" taksId="rake" /><RakeTask description="" fullCmd="parallel:rollback" taksId="rollback" /><RakeTask description="" fullCmd="parallel:seed" taksId="seed" /><RakeTask description="" fullCmd="parallel:setup" taksId="setup" /><RakeTask description="" fullCmd="parallel:spec" taksId="spec" /><RakeTask description="" fullCmd="parallel:test" taksId="test" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="random_data"><RakeTask description="seeds the data base wth random data" fullCmd="random_data:seed" taksId="seed" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="redmine"><RakeGroup description="" fullCmd="" taksId="email"><RakeTask description="Read an email from standard input" fullCmd="redmine:email:read" taksId="read" /><RakeTask description="Read emails from an IMAP server" fullCmd="redmine:email:receive_imap" taksId="receive_imap" /><RakeTask description="Read emails from an POP3 server" fullCmd="redmine:email:receive_pop3" taksId="receive_pop3" /><RakeTask description="Send a test email to the user with the provided login name" fullCmd="redmine:email:test[login]" taksId="test[login]" /><RakeTask description="" fullCmd="redmine:email:test" taksId="test" /></RakeGroup><RakeTask description="Fetch changesets from the repositories" fullCmd="redmine:fetch_changesets" taksId="fetch_changesets" /><RakeTask description="Load Redmine default configuration data" fullCmd="redmine:load_default_data" taksId="load_default_data" /><RakeTask description="List all permissions and the actions registered with them" fullCmd="redmine:permissions" taksId="permissions" /><RakeTask description="Send reminders about issues due in the next days" fullCmd="redmine:send_reminders" taksId="send_reminders" /><RakeGroup description="" fullCmd="" taksId="watchers"><RakeTask description="Removes watchers from what they can no longer view" fullCmd="redmine:watchers:prune" taksId="prune" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="" fullCmd="redmine:plugins:migrate" taksId="migrate" /></RakeGroup></RakeGroup><RakeTask description="Package up a OpenProject release from git" fullCmd="release[version]" taksId="release[version]" /><RakeTask description="Restart app by touching tmp/restart.txt" fullCmd="restart" taksId="restart" /><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeGroup description="" fullCmd="" taksId="sample_data"><RakeTask description="Create the given number of fake projects" fullCmd="sample_data:projects[nr_of_projects]" taksId="projects[nr_of_projects]" /><RakeTask description="" fullCmd="sample_data:projects" taksId="projects" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="scm"><RakeTask description="List repositories in the current managed path that do not have an associated project" fullCmd="scm:find_unassociated" taksId="find_unassociated" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Migrate existing repositories to managed for a given URL prefix" fullCmd="scm:migrate:managed" taksId="managed" /></RakeGroup><RakeTask description="Setup a repository checkout base URL for the given vendor: rake scm:set_checkout_url[git=&lt;url&gt;, subversion=&lt;url&gt;]" fullCmd="scm:set_checkout_url" taksId="set_checkout_url" /></RakeGroup><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeGroup description="" fullCmd="" taksId="secure_headers"><RakeTask description="Generate config/secure_headers_generated_hashes.yml" fullCmd="secure_headers:generate_hashes" taksId="generate_hashes" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="setting"><RakeTask description="Allow to get a Setting: rake setting:get[key]" fullCmd="setting:get[key]" taksId="get[key]" /><RakeTask description="Allow to set a Setting: rake setting:set[key1=value1,key2=value2]" fullCmd="setting:set" taksId="set" /><RakeTask description="" fullCmd="setting:get" taksId="get" /></RakeGroup><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run core and plugin specs" fullCmd="spec:all" taksId="all" /><RakeTask description="Run the code examples in spec/contracts" fullCmd="spec:contracts" taksId="contracts" /><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="Run the code examples in spec/decorators" fullCmd="spec:decorators" taksId="decorators" /><RakeTask description="Run the code examples in spec/features" fullCmd="spec:features" taksId="features" /><RakeTask description="Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="Run the code examples in spec_legacy" fullCmd="spec:legacy" taksId="legacy" /><RakeGroup description="" fullCmd="" taksId="legacy"><RakeTask description="Run the code examples in spec_legacy/functional" fullCmd="spec:legacy:functional" taksId="functional" /><RakeTask description="Run the code examples in spec_legacy/integration" fullCmd="spec:legacy:integration" taksId="integration" /><RakeTask description="Run the code examples in spec_legacy/unit" fullCmd="spec:legacy:unit" taksId="unit" /></RakeGroup><RakeTask description="Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="Run the code examples in spec/mailers" fullCmd="spec:mailers" taksId="mailers" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Run the code examples in spec/permissions" fullCmd="spec:permissions" taksId="permissions" /><RakeTask description="Run plugin specs" fullCmd="spec:plugins" taksId="plugins" /><RakeTask description="Run the code examples in spec/policies" fullCmd="spec:policies" taksId="policies" /><RakeTask description="Run the code examples in spec/requests" fullCmd="spec:requests" taksId="requests" /><RakeTask description="Run the code examples in spec/routing" fullCmd="spec:routing" taksId="routing" /><RakeTask description="Run the code examples in spec/security" fullCmd="spec:security" taksId="security" /><RakeTask description="Run the code examples in spec/seeders" fullCmd="spec:seeders" taksId="seeders" /><RakeTask description="Run the code examples in spec/services" fullCmd="spec:services" taksId="services" /><RakeTask description="Run the code examples in spec/views" fullCmd="spec:views" taksId="views" /><RakeTask description="Run the code examples in spec/workers" fullCmd="spec:workers" taksId="workers" /><RakeTask description="" fullCmd="spec:prepare" taksId="prepare" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application or engine" fullCmd="stats" taksId="stats" /><RakeTask description="Runs all tests in test folder except system ones" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for cells" fullCmd="test:cells" taksId="cells" /><RakeTask description="Run tests quickly, but also reset db" fullCmd="test:db" taksId="db" /><RakeGroup description="" fullCmd="" taksId="suite"><RakeTask description="runs all tests" fullCmd="test:suite:run" taksId="run" /></RakeGroup><RakeTask description="Run system tests only" fullCmd="test:system" taksId="system" /><RakeTask description="" fullCmd="test:controllers" taksId="controllers" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:generators" taksId="generators" /><RakeTask description="" fullCmd="test:helpers" taksId="helpers" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:jobs" taksId="jobs" /><RakeTask description="" fullCmd="test:mailers" taksId="mailers" /><RakeTask description="" fullCmd="test:models" taksId="models" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:run" taksId="run" /><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeTask description="List all time zones, list by two-letter country code (`rails time:zones[US]`), or list by UTC offset (`rails time:zones[-8]`)" fullCmd="time:zones[country_or_offset]" taksId="zones[country_or_offset]" /><RakeTask description="" fullCmd="time:zones" taksId="zones" /><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear cache, socket and screenshot files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear, tmp:screenshots:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="screenshots"><RakeTask description="" fullCmd="tmp:screenshots:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="translations"><RakeTask description="upload english, download locales, and update files" fullCmd="translations:update" taksId="update" /></RakeGroup><RakeTask description="Displays the current version of OpenProject" fullCmd="version" taksId="version" /><RakeGroup description="" fullCmd="" taksId="yarn"><RakeTask description="Install all JavaScript dependencies as specified via Yarn" fullCmd="yarn:install" taksId="install" /></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="load_default_data" taksId="load_default_data" /><RakeGroup description="" fullCmd="" taksId="packager"><RakeTask description="" fullCmd="packager:before_postinstall" taksId="before_postinstall" /><RakeTask description="" fullCmd="packager:postinstall" taksId="postinstall" /><RakeGroup description="" fullCmd="" taksId="setup"><RakeTask description="" fullCmd="packager:setup:relative_root" taksId="relative_root" /><RakeTask description="" fullCmd="packager:setup:scm" taksId="scm" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="railties"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="railties:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="release" taksId="release" /><RakeTask description="" fullCmd="tmp" taksId="tmp" /><RakeTask description="" fullCmd="tmp/cache" taksId="tmp/cache" /><RakeTask description="" fullCmd="tmp/cache/assets" taksId="tmp/cache/assets" /><RakeTask description="" fullCmd="tmp/pids" taksId="tmp/pids" /><RakeTask description="" fullCmd="tmp/sockets" taksId="tmp/sockets" /></RakeGroup></Settings>
